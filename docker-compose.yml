# 도커 컴포즈 버전
version: "3"

# 컨테이너들 정의
services:

  # 컨테이너1 frontend << 여기서 이름들 지어줌
  frontend:

    # 빌드 정보
    build:
      dockerfile: Dockerfile.dev
      context: ./frontend
    
     # 로컬 머신에 있는 파일들 맵핑(볼륨사용)
    volumes:
       # 맴핑제외
      - /app/node_modules
      # 복사될파일위치 : 컨테이너에복사할위치
      - ./frontend:/app

    # 리엑트에러방지용 세팅값
    stdin_open: true


  # 컨테이너2 -라우터용 엔진엑스
  nginx: 

    # 재시작설정
    # on 다시시작하지 않음. 죽으면 끝
    # always 항상 재시작
    # on-failure on-failure 에러 코드와 함께 컨테이너가 멈췄을 때만 재시작
    # unless-stopped 개발자가 임의로 멈추려고 할 때 빼고는 항상 재시작
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    
    # 포트설정
    ports: 
      - "3000:80"

  # 컨테이너3 -백엔드서버
  backend:
    build: 
      dockerfile: Dockerfile.dev
      context: ./backend
    container_name: app_backend10
    volumes:
      - /app/node_modules
      - ./backend:/app

  # 주석처리하게되면 도커컴포즈업할때 누락됨으로 도커환경에 올라기지 않음
  # # 컨테이너3 -db
  # mysql:
  #   build: ./mysql
  #   restart: unless-stopped
  #   container_name: app_mysql10
  #   ports:
  #     - "3306:3306"
  #   volumes:
  #     - ./mysql/mysql_data:/var/lib/mysql
  #     # Docker 컨테이너가 최초 실행 시 불러올 스크립트가 위치하는 공간(initdb.d)
  #     # 주로 데이터 초기화세팅에 사용
  #     # .sh .sql 파일을 docker-entrypoint-initdb.d에 마운트 됨
  #     - ./mysql/sqls/:/docker-entrypoint-initdb.d/
  #   environment:
  #     MYSQL_ROOT_PASSWORD: xmfkdlxpr1234
  #     MYSQL_DATABASE: myapp
